name: Deploy Model with Triton Inference Server
inputs:
- {name: Name, type: String}
- {name: S3-Address, type: String}
outputs:
- {name: Name, type: String}
- {name: Kind, type: String}
- {name: Secret-Result, type: JsonObject}
- {name: Deployment-Result, type: JsonObject}
- {name: Service-Result, type: JsonObject}
metadata:
  annotations:
    author: Sebastian Lehrig <Sebastian.Lehrig1@ibm.com>
implementation:
  container:
    image: quay.io/ibm/kubeflow-component-deploy-model-with-triton@sha256:3728c686ddc651f21f32b68d69a93e9829bfaa7837a1d5852fd48d797796a65c
    command:
    - bash
    - -exc
    - |
      model_name=$0
      s3_address=$1
      output_name_path=$2
      output_kind_path=$3
      output_secret_result=$4
      output_deployment_result=$5
      output_service_result=$6
      
      mkdir -p "$(dirname "$output_name_path")"
      mkdir -p "$(dirname "$output_kind_path")"
      mkdir -p "$(dirname "$output_secret_result")"
      mkdir -p "$(dirname "$output_deployment_result")"
      mkdir -p "$(dirname "$output_service_result")"

      yq e -i '.metadata.name = "'$model_name-deployment'"' deployment.yaml
      yq e -i '.metadata.labels.app = "'$model_name'"' deployment.yaml
      yq e -i '.spec.selector.matchLabels.app = "'$model_name'"' deployment.yaml
      yq e -i '.spec.template.metadata.labels.app = "'$model_name'"' deployment.yaml
      yq e -i '.spec.template.spec.containers.[0].name = "'$model_name'"' deployment.yaml
      yq e -i '.spec.template.spec.containers.[0].args = ["tritonserver", "--model-store='$s3_address'", "--model-control-mode=poll", "--repository-poll-secs=5"]' deployment.yaml

      yq e -i '.metadata.name = "'$model_name-deployment'"' service.yaml
      yq e -i '.metadata.labels.app = "'$model_name'"' service.yaml
      yq e -i '.spec.selector.app = "'$model_name'"' service.yaml

      kubectl apply -f "secrets.yaml" --output=json > "$output_secret_result"
      kubectl apply -f "deployment.yaml" --output=json > "$output_deployment_result"
      kubectl apply -f "service.yaml" --output=json > "$output_service_result"
      < "$output_deployment_result" jq '.metadata.name' --raw-output > "$output_name_path"
      < "$output_deployment_result" jq '.kind' --raw-output > "$output_kind_path"
    - {inputValue: Name}
    - {inputValue: S3-Address}
    - {outputPath: Name}
    - {outputPath: Kind}
    - {outputPath: Secret-Result}
    - {outputPath: Deployment-Result}
    - {outputPath: Service-Result}

